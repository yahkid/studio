rules_version = '2';

// By default, deny all reads and writes
// This is a secure-by-default approach.
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if a user is an admin
    // REPLACE 'YOUR_ADMIN_UID_HERE' with your actual Firebase Auth User ID
    function isAdmin() {
      return request.auth.uid == 'REPLACE_WITH_YOUR_ADMIN_UID';
    }
    
    // Helper function to check if the user is the owner of the document
    function isOwner(resource) {
      return request.auth.uid == resource.data.userId;
    }

    // Public content (Sermons, Courses, Events, Leadership, etc.) is readable by anyone
    match /sermons/{sermonId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /courses/{courseId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /events/{eventId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /leadership/{leaderId} {
      allow read: if true;
      allow write: if isAdmin();
    }
     match /blog_posts/{postId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /published_testimonials/{testimonyId} {
        allow read: if true;
        allow write: if isAdmin();
    }
     match /resources/{resourceId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // User-specific data (progress, etc.) can only be read/written by the owner
    match /user_course_progress/{progressId} {
      allow read, write: if isOwner(resource);
    }

    // User submissions can be created by any authenticated user
    // but can only be read/updated/deleted by an admin
    match /decisions/{decisionId} {
        allow create: if request.auth.uid != null;
        allow read, update, delete: if isAdmin();
    }
    
    match /decisions/{decisionId}/contact_logs/{logId} {
        allow read, write: if isAdmin();
    }

    match /user_testimonies/{testimonyId} {
        allow create: if request.auth.uid != null;
        allow read, update, delete: if isAdmin();
    }

    // Public creation for lead magnets and signups (no auth required)
    match /lead_magnet_signups/{signupId} {
        allow create: if true;
        allow read, update, delete: if isAdmin();
    }
    match /visit_requests/{requestId} {
        allow create: if true;
        allow read, update, delete: if isAdmin();
    }
    match /exit_intent_offers/{offerId} {
        allow create: if true;
        allow read, update, delete: if isAdmin();
    }
    match /weekly_updates_signups/{signupId} {
        allow create: if true;
        allow read, update, delete: if isAdmin();
    }
     match /prayer_partner_signups/{signupId} {
        allow create: if true;
        allow read, update, delete: if isAdmin();
    }
    match /volunteer_partner_signups/{signupId} {
        allow create: if true;
        allow read, update, delete: if isAdmin();
    }
    
     match /community_needs/{needId} {
        allow create: if request.auth.uid != null; // Must be authenticated (staff)
        allow read, update, delete: if isAdmin();
    }
    
    // Donations can be created by anyone, but only managed by admins.
    match /donations/{donationId} {
        allow create: if true;
        allow read, update, delete: if isAdmin();
    }
  }
}
