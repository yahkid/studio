
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    // Checks if a user is signed in.
    function isSignedIn() {
      return request.auth != null;
    }

    // Checks if the requesting user is the owner of a document.
    function isOwner(uid) {
      return request.auth != null && request.auth.uid == uid;
    }
    
    // --- Collection Rules ---

    // Content collections managed by staff.
    // Security relies on the Next.js staff layout to only allow admins to access the forms that write here.
    match /{collection}/{docId} where collection in ['courses', 'events', 'leadership', 'sermons', 'blog_posts', 'resources', 'published_testimonials'] {
      allow read: if true; // Publicly readable
      allow create, update, delete: if isSignedIn(); // Allow any signed-in user (admins via app logic)
    }
    
    // User-specific data collections. Only the owner can read/write their own documents.
    match /user_course_progress/{progressId} {
      allow read, write: if isOwner(resource.data.user_id);
    }
    
    // User submission collections. Any signed-in user can create. Only staff can manage.
    match /user_testimonies/{testimonyId} {
      allow create: if isOwner(request.resource.data.userId); // User can only create their own testimony
      allow read, update: if isSignedIn(); // Allow any signed-in user (admin) to review.
    }

    match /decisions/{decisionId} {
      allow create: if isOwner(request.resource.data.user_id); // User can only create their own decision
      allow read, update: if isSignedIn(); // Allow any signed-in user (admin) to manage.
      
      // Contact logs are subcollections of decisions, only staff can manage.
      match /contact_logs/{logId} {
        allow read, create, update, delete: if isSignedIn();
      }
    }
    
    // Public forms where anyone can sign up (even unauthenticated). Staff can manage the data.
    match /{collection}/{docId} where collection in ['lead_magnet_signups', 'visit_requests', 'exit_intent_offers', 'weekly_updates_signups', 'financial_partner_signups', 'prayer_partner_signups', 'volunteer_partner_signups'] {
      allow create: if true;
      allow read, update, delete: if isSignedIn();
    }
  }
}
