rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // PUBLIC-READ COLLECTIONS
    match /leadership/{leaderId} {
      allow read: if true;
      allow write: if false; // Managed via server-side logic/admin SDK
    }
    match /published_testimonials/{testimonialId} {
      allow read: if true;
      allow write: if false; // Managed via server-side logic/admin SDK
    }
    match /events/{eventId} {
      allow read: if true;
      allow write: if false; // Managed via server-side logic/admin SDK
    }
    match /courses/{courseId} {
      allow read: if true;
      allow write: if false; // Managed via server-side logic/admin SDK
    }

    // USER-SUBMITTED, WRITE-ONLY for authenticated users
    function isSignedIn() {
      return request.auth != null;
    }

    match /decisions/{decisionId} {
      allow create: if isSignedIn();
      allow read, update, delete: if false;
    }
    match /lead_magnet_signups/{signupId} {
      allow create: if true; // Anyone can sign up
      allow read, update, delete: if false;
    }
    match /visit_requests/{requestId} {
      allow create: if true; // Anyone can request a visit
      allow read, update, delete: if false;
    }
     match /exit_intent_offers/{offerId} {
      allow create: if true;
      allow read, update, delete: if false;
    }
    match /weekly_updates_signups/{signupId} {
      allow create: if true;
      allow read, update, delete: if false;
    }
    match /financial_partner_signups/{signupId} {
      allow create: if true;
      allow read, update, delete: if false;
    }
    match /prayer_partner_signups/{signupId} {
      allow create: if true;
      allow read, update, delete: if false;
    }
    match /volunteer_partner_signups/{signupId} {
      allow create: if true;
      allow read, update, delete: if false;
    }
     match /user_testimonies/{testimonyId} {
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      // Admins update status via server-side logic, not direct client access
      allow read, update, delete: if false;
    }

    // USER-SPECIFIC DATA
    match /user_course_progress/{progressId} {
      // User can read, create, and update their own progress document
      allow read, create, update: if isSignedIn() && request.resource.data.user_id == request.auth.uid;
      allow delete: if false; // Prevent users from deleting their progress
    }
  }
}
