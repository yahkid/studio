
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin.
    // For now, this is simplified to check against a specific UID from an environment variable.
    // In a production app, this would be better handled with custom claims.
    function isAdmin() {
      // Allow if the user's UID matches the admin UID stored in project settings
      // IMPORTANT: You MUST set NEXT_PUBLIC_ADMIN_UID in your .env file for this to work.
      return request.auth.uid == "s5k2IqLqXtRT9393SjG4yvJgG8E2";
    }

    // --- USER SUBMISSION COLLECTIONS ---
    
    // Decisions submitted by users
    match /decisions/{decisionId} {
      allow read, update: if isAdmin();
      allow create: if request.auth != null; // Any authenticated user can create a decision
      
      // Subcollection for contact logs
      match /contact_logs/{logId} {
        allow read, create: if isAdmin();
      }
    }

    // User Testimonies: allow authenticated users to submit, only admins to read/manage
    match /user_testimonies/{testimonyId} {
        allow read: if isAdmin();
        allow create: if request.auth.uid == request.resource.data.userId; // User can only create for themselves
        allow update: if isAdmin(); // Only admin can approve/reject
        allow delete: if isAdmin();
    }
    
    // Published Testimonials: publicly readable, admin-only write access
    match /published_testimonials/{testimonyId} {
        allow read: if true;
        allow write: if isAdmin();
    }

    // Lead Magnets & Signups: Allow anyone to create, only admins to read
    match /lead_magnet_signups/{signupId} {
        allow read: if isAdmin();
        allow create: if true;
    }
    match /weekly_updates_signups/{signupId} {
        allow read: if isAdmin();
        allow create: if true;
    }
     match /visit_requests/{reqId} {
        allow read: if isAdmin();
        allow create: if true;
    }
    match /exit_intent_offers/{offerId} {
        allow read: if isAdmin();
        allow create: if true;
    }
     match /financial_partner_signups/{signupId} {
        allow read: if isAdmin();
        allow create: if true;
    }
    match /prayer_partner_signups/{signupId} {
        allow read: if isAdmin();
        allow create: if true;
    }
    match /volunteer_partner_signups/{signupId} {
        allow read: if isAdmin();
        allow create: if true;
    }
    
    // --- USER DATA COLLECTIONS ---

    // User Course Progress: Only the user can read/write their own progress
    match /user_course_progress/{progressId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.user_id;
    }
    
    // --- PUBLIC CONTENT COLLECTIONS ---

    // Leadership, Courses, Events, Sermons, Blog Posts, Resources: Publicly readable, admin-only write access
    match /leadership/{leaderId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /courses/{courseId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /events/{eventId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /sermons/{sermonId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /blog_posts/{postId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /resources/{resourceId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Default deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
