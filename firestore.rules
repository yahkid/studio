
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // --- USER DATA & SUBMISSIONS ---

    // Anyone can create a decision, but only the user who created it can read it back (future feature).
    // Admins can read all decisions.
    match /decisions/{decisionId} {
      allow read: if request.auth != null && (request.auth.uid == resource.data.user_id || get(/databases/$(database)/documents/admins/$(request.auth.uid)).exists());
      allow create: if request.auth != null && request.auth.uid == request.resource.data.user_id;
      allow update, delete: if false; // Disallow updates/deletes for now.
    }
    
    // Anyone can sign up for lead magnets. No reads needed.
    match /lead_magnet_signups/{docId} {
      allow read, update, delete: if false;
      allow create: if true;
    }
    
    // Anyone can request a visit plan.
    match /visit_requests/{docId} {
      allow read, update, delete: if false;
      allow create: if true;
    }

    // Anyone can submit the exit intent form.
    match /exit_intent_offers/{docId} {
      allow read, update, delete: if false;
      allow create: if true;
    }

    // Anyone can sign up for weekly updates.
    match /weekly_updates_signups/{docId} {
      allow read, update, delete: if false;
      allow create: if true;
    }

    // Anyone can express interest in financial partnership.
    match /financial_partner_signups/{docId} {
       allow read, update, delete: if false;
       allow create: if true;
    }

    // Anyone can sign up to be a prayer partner.
    match /prayer_partner_signups/{docId} {
      allow read, update, delete: if false;
      allow create: if true;
    }

    // Anyone can sign up to volunteer.
    match /volunteer_partner_signups/{docId} {
      allow read, update, delete: if false;
      allow create: if true;
    }
    
    // Testimonies can only be created by an authenticated user.
    // They can only be read by the submitting user or an admin.
    match /user_testimonies/{testimonyId} {
        allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
        allow read: if request.auth != null && (request.auth.uid == resource.data.userId || get(/databases/$(database)/documents/admins/$(request.auth.uid)).exists());
        allow update: if get(/databases/$(database)/documents/admins/$(request.auth.uid)).exists(); // Only admins can update status.
        allow delete: if false;
    }
    
    // A user can only read and write their own course progress.
    match /user_course_progress/{progressId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.user_id;
    }
    
    // --- PUBLIC CONTENT ---
    
    // Anyone can read courses, leadership, events, sermons, blog posts, published testimonials and resources.
    // Only authenticated users (admins) can write/edit/delete them. This simplifies our staff portal logic for now.
    match /courses/{courseId} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    match /leadership/{leaderId} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    match /events/{eventId} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    match /sermons/{sermonId} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    match /blog_posts/{postId} {
        allow read: if true;
        allow write: if request.auth != null;
    }
    
    match /published_testimonials/{testimonialId} {
        allow read: if true;
        allow write: if request.auth != null;
    }

    match /resources/{resourceId} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    // --- ADMIN ---
    // A placeholder for a potential admins collection.
    match /admins/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if false; // Should be managed via backend or console
    }
    
    // Default deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
