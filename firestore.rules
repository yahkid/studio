rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check for Admin role.
    // NOTE: This currently checks for a specific UID.
    // For better scalability, this should be changed to check for a custom claim:
    // e.g., function isAdmin() { return request.auth.token.role == 'admin'; }
    function isAdmin() {
      return request.auth.uid == 'Xkl0Av2gjtZxaNvAMQe035AMSNn2';
    }
    
    // Helper function to check if a user is authenticated.
    function isSignedIn() {
      return request.auth != null;
    }

    //----------------------------------------------------------------------
    // Publicly Readable Content
    // Anyone can read this data, but only admins can write it.
    //----------------------------------------------------------------------
    match /courses/{courseId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /leadership/{leaderId} {
    	allow read: if true;
      allow write: if isAdmin();
    }
    
    match /events/{eventId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /published_testimonials/{testimonialId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }
    
    //----------------------------------------------------------------------
    // User-Specific Data
    // Users can only access their own documents.
    //----------------------------------------------------------------------
    match /user_course_progress/{progressId} {
      allow read, update: if request.auth.uid == resource.data.user_id;
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.user_id;
    }

    //----------------------------------------------------------------------
    // Authenticated User Submissions
    // Any signed-in user can create these documents, but cannot read/update/delete them.
    // Only admins can read/manage them after creation.
    //----------------------------------------------------------------------
    match /decisions/{decisionId} {
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.user_id;
      allow read, update, delete: if isAdmin();
    }
    
    match /user_testimonies/{testimonyId} {
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.userId;
      // Admins can read all testimonies and update their status.
      allow read, update: if isAdmin();
    }
    
    // Allow anyone to create these, as they are lead-capture forms.
    match /lead_magnet_signups/{signupId} {
      allow create: if true;
      allow read, delete: if isAdmin();
    }
    
    match /visit_requests/{requestId} {
      allow create: if true;
      allow read, delete: if isAdmin();
    }
    
    match /exit_intent_offers/{offerId} {
      allow create: if true;
      allow read, delete: if isAdmin();
    }
    
    match /weekly_updates_signups/{signupId} {
       allow create: if true;
       allow read, delete: if isAdmin();
    }
    
    match /financial_partner_signups/{signupId} {
      allow create: if true;
      allow read, delete: if isAdmin();
    }
    
    match /prayer_partner_signups/{signupId} {
       allow create: if true;
       allow read, delete: if isAdmin();
    }
    
    match /volunteer_partner_signups/{signupId} {
       allow create: if true;
       allow read, delete: if isAdmin();
    }
    
    //----------------------------------------------------------------------
    // Placeholder for Future Collections (Default Deny)
    //----------------------------------------------------------------------
    match /sermons/{sermonId} { allow read, write: if isAdmin(); }
    match /humanitarian_projects/{projectId} { allow read, write: if isAdmin(); }
    // ... add other future collections here as needed.
    
    // Default deny all other paths
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
