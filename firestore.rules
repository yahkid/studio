rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Helper Functions ---
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    // For this prototype, any signed-in user can perform admin actions on the database.
    // In a production app, this would check for a custom claim or a role in a 'users' collection.
    function isAdmin() {
      return isSignedIn();
    }
    
    // --- Public Content ---
    // Anyone can read, only "admins" can write.
    match /courses/{courseId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /events/{eventId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /leadership/{leaderId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /sermons/{sermonId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /published_testimonials/{testimonialId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /resources/{resourceId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // --- User Submissions ---
    // Authenticated users can create. Admins can manage.
    
    match /decisions/{decisionId} {
      allow read, update, delete: if isAdmin();
      allow create: if isOwner(request.resource.data.user_id);
    }
    
    match /user_testimonies/{testimonyId} {
      allow read, update, delete: if isAdmin();
      allow create: if isOwner(request.resource.data.userId);
    }
    
    match /visit_requests/{requestId} {
      allow create: if isSignedIn();
      allow read, update, delete: if isAdmin();
    }
    
    match /financial_partner_signups/{signupId} {
      allow create: if true;
      allow read, update, delete: if isAdmin();
    }
    
    match /prayer_partner_signups/{signupId} {
      allow create: if true;
      allow read, update, delete: if isAdmin();
    }
    
    match /volunteer_partner_signups/{signupId} {
      allow create: if true;
      allow read, update, delete: if isAdmin();
    }
    
    match /lead_magnet_signups/{signupId} {
      allow create: if true;
      allow read, update, delete: if isAdmin();
    }

    match /exit_intent_offers/{offerId} {
      allow create: if true;
      allow read, update, delete: if isAdmin();
    }
    
    match /weekly_updates_signups/{signupId} {
      allow create: if true;
      allow read, update, delete: if isAdmin();
    }

    // --- User-Specific Data ---
    // Users can only read and write their own documents.
    
    match /user_course_progress/{progressId} {
      // Allow create if the user is the owner of the new document
      allow create: if isOwner(request.resource.data.user_id);
      // Allow read/update/delete if the user is the owner of the existing document
      allow read, update, delete: if isOwner(resource.data.user_id);
    }
  }
}
